---
#################################################### 
# HTPC (Home Theatre PC) Stack
# 
# (Almost) everything you need for a fully-automated
# locally-controlled home theatre system
#################################################### 
services:

  # Index Manager
  prowlarr:
    image: linuxserver/prowlarr:develop
    container_name: prowlarr
    env_file:
      - common.env
    volumes:
      - "./config/prowlarr:/config"
    ports:
      - "9696:9696"
    restart: unless-stopped

  # Movie Library Manager
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    env_file:
      - common.env
    volumes:
      - "/bulk/htpc_media/Downloads/torrents:/downloads/torrents"
      - "/bulk/htpc_media/Downloads/usenet:/downloads/usenet"
      - "/bulk/htpc_media/Movies:/movies"
      - "./config/radarr:/config"
    ports:
      - "7878:7878"
    restart: unless-stopped

  # TV Show Library Manager
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    env_file:
      - common.env
    volumes:
      - "/bulk/htpc_media/Downloads/torrents:/downloads/torrents"
      - "/bulk/htpc_media/Downloads/usenet:/downloads/usenet"
      - "/bulk/htpc_media/TV Shows:/tv"
      - "/bulk/htpc_media/Anime:/anime"
      - "./config/sonarr:/config"
    ports:
      - "8989:8989"
    restart: unless-stopped

  # Subtitle manager
  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    volumes:
      - "./config/bazarr:/config"
      - "/bulk/htpc_media/TV Shows:/tv"
      - "/bulk/htpc_media/Movies:/movies"
      - "/bulk/htpc_media/Anime:/anime"
    env_file:
      - common.env
    ports:
      - "6767:6767"
    restart: unless-stopped

    
  # Plex Metrics Dashboard
  tautulli:
    image: ghcr.io/tautulli/tautulli
    container_name: tautulli
    env_file:
      - common.env
    volumes:
      - "./config/tautulli:/config"
      - "./logs/plex/:/mnt/plexlogs/"
    ports:
      - "8181:8181"
    restart: unless-stopped   

  # Usenet download client
  sabnzbd:
        image: linuxserver/sabnzbd:latest
        container_name: sabnzbd
        env_file:
          - common.env
        volumes:
          - "/fast/downloads/usenet/incomplete:/downloads/incomplete"
          - "/bulk/htpc_media/Downloads/usenet:/downloads/complete"
          - "./config/sabnzbd:/config"
        ports:
          - "28080:8080"
          - "29090:9090"
        restart: unless-stopped

  # Bittorrent download client
  qbit:
    image: guillaumedsde/alpine-qbittorrent-openvpn:latest
    container_name: qbit
    volumes:
      - "/bulk/htpc_media/Downloads/torrents:/downloads"
      - "./config/qbit:/config"
      - "/etc/localtime:/etc/localtime:ro"
    env_file:
      - common.env
    environment:
      OPENVPN_PROVIDER: ${OPENVPN_PROVIDER:-PIA}
      OPENVPN_CONFIG: ${OPENVPN_CONFIG:-spain}
      OPENVPN_USERNAME: ${OPENVPN_USERNAME}
      OPENVPN_PASSWORD: ${OPENVPN_PASSWORD}
    ports:
      - "8888:8080"
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

  # Bittorrent Frontend
  flood:
    image: jesec/flood:latest
    container_name: flood
    depends_on:
      - qbit
    volumes:
      - "/bulk/htpc_media/Downloads/torrents:/data"
    ports:
      - "3333:3000"
    restart: unless-stopped


  taisun:
    image: linuxserver/taisun
    container_name: taison
    ports:
      - "3456:3000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    network_mode: bridge
    restart: unless-stopped

  organizr:
    image: organizr/organizr
    container_name: organizr
    env_file:
      - common.env
    ports:
      - "38080:80"
    volumes:
      - "./config/organizr:/config"
    restart: unless-stopped

  # Auto-healing service
  htpc_autoheal:
    image: willfarrell/autoheal
    container_name: htpc_autoheal
    environment:
      AUTOHEAL_CONTAINER_LABEL: "all"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9000:9000"
    restart: unless-stopped


volumes:
  portainer_data:
    external: true


  mongo_data:
    external: true

  mongo_configdb_data:
    external: true







